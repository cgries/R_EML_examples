#directory = "http://orcid.org",
#personinforow[,"userId"])
}
}
personinfo <- read.csv("creators.csv", header = TRUE, sep = ",", colClasses = "character")
dataset@creator <- as(lapply(1:dim(personinfo)[1], function(i)
set_creator(personinfo[i,])),
"ListOfcreator")
getSlots("creator")
title <- "LAGOS - Lake  nitrogen, phosphorus, and stoichiometry data and geospatial data for lakes in a 17-state region of the U.S."
pubDate <- "2016"
abstract <- as(set_TextType("abstract.docx"), "abstract")
dataset <- new("dataset",
title = title,
pubDate = pubDate,
abstract = abstract)
set_creator <- function(personinforow){
individualName <- new("individualName",
givenName = personinforow[,"givenName"],
surName = personinforow[,"surName"])
creator <- new("creator",
individualName = individualName,
organizationName = personinforow[,"organizationName"],
electronicMailAddress = personinforow[,"electronicMailAddress"])
if(nchar(personinforow[,"userId"]) > 0){
userId <- new("userId",
directory = "http://orcid.org",
personinforow[,"userId"])
creator@userId <- new("ListOfuserId", c(userId))
}
}
personinfo <- read.csv("creators.csv", header = TRUE, sep = ",", colClasses = "character")
dataset@creator <- as(lapply(1:dim(personinfo)[1], function(i)
set_creator(personinfo[i,])),
"ListOfcreator")
dataset
title <- "LAGOS - Lake  nitrogen, phosphorus, and stoichiometry data and geospatial data for lakes in a 17-state region of the U.S."
pubDate <- "2016"
abstract <- as(set_TextType("abstract.docx"), "abstract")
dataset <- new("dataset",
title = title,
pubDate = pubDate,
abstract = abstract)
set_creator <- function(personinforow){
individualName <- new("individualName",
givenName = personinforow[,"givenName"],
surName = personinforow[,"surName"])
creator <- new("creator",
individualName = individualName,
organizationName = personinforow[,"organizationName"],
electronicMailAddress = personinforow[,"electronicMailAddress"])
if(nchar(personinforow[,"userId"]) > 0){
userId <- new("userId")
userId@directory <- new("xml_attribute", "http://orcid.org")
userId@.Data <- personinforow[,"userId"]
creator@userId <- new("ListOfuserId", c(userId))
}
}
personinfo <- read.csv("creators.csv", header = TRUE, sep = ",", colClasses = "character")
dataset@creator <- as(lapply(1:dim(personinfo)[1], function(i)
set_creator(personinfo[i,])),
"ListOfcreator")
dataset
userId <- new("userId")
userId@directory <- new("xml_attribute", "http://orcid.org")
userId@.Data <- "http://orcid.org/0000-8675-4837"
userId
creator <- new("creator")
creator@userId <- new("userId")
getSlots("creator")
associatedParty <- new("associatedParty")
associatedParty@useId <- new("userId")
getSlots(associatedParty)
getSlots("associatedParty")
creator@individualName <- new("individualName")
creator@userId <- new("ListOfuserId")
creator
creator@userId <- new("ListOfuserId", userId)
creator@userId <- new("ListOfuserId", c(userId))
creator
title <- "LAGOS - Lake  nitrogen, phosphorus, and stoichiometry data and geospatial data for lakes in a 17-state region of the U.S."
pubDate <- "2016"
abstract <- as(set_TextType("abstract.docx"), "abstract")
dataset <- new("dataset",
title = title,
pubDate = pubDate,
abstract = abstract)
set_creator <- function(personinforow){
individualName <- new("individualName",
givenName = personinforow[,"givenName"],
surName = personinforow[,"surName"])
creator <- new("creator",
individualName = individualName,
organizationName = personinforow[,"organizationName"],
electronicMailAddress = personinforow[,"electronicMailAddress"])
if(nchar(personinforow[,"userId"]) > 0){
userId <- new("userId")
userId@directory <- new("xml_attribute", "http://orcid.org")
userId@.Data <- personinforow[,"userId"]
print(userID)
#creator@userId <- new("ListOfuserId", c(userId))
}
}
personinfo <- read.csv("creators.csv", header = TRUE, sep = ",", colClasses = "character")
dataset@creator <- as(lapply(1:dim(personinfo)[1], function(i)
set_creator(personinfo[i,])),
"ListOfcreator")
title <- "LAGOS - Lake  nitrogen, phosphorus, and stoichiometry data and geospatial data for lakes in a 17-state region of the U.S."
pubDate <- "2016"
abstract <- as(set_TextType("abstract.docx"), "abstract")
dataset <- new("dataset",
title = title,
pubDate = pubDate,
abstract = abstract)
set_creator <- function(personinforow){
individualName <- new("individualName",
givenName = personinforow[,"givenName"],
surName = personinforow[,"surName"])
creator <- new("creator",
individualName = individualName,
organizationName = personinforow[,"organizationName"],
electronicMailAddress = personinforow[,"electronicMailAddress"])
if(nchar(personinforow[,"userId"]) > 0){
userId <- new("userId")
userId@directory <- new("xml_attribute", "http://orcid.org")
userId@.Data <- personinforow[,"userId"]
print(userId)
#creator@userId <- new("ListOfuserId", c(userId))
}
}
personinfo <- read.csv("creators.csv", header = TRUE, sep = ",", colClasses = "character")
dataset@creator <- as(lapply(1:dim(personinfo)[1], function(i)
set_creator(personinfo[i,])),
"ListOfcreator")
title <- "LAGOS - Lake  nitrogen, phosphorus, and stoichiometry data and geospatial data for lakes in a 17-state region of the U.S."
pubDate <- "2016"
abstract <- as(set_TextType("abstract.docx"), "abstract")
dataset <- new("dataset",
title = title,
pubDate = pubDate,
abstract = abstract)
set_creator <- function(personinforow){
individualName <- new("individualName",
givenName = personinforow[,"givenName"],
surName = personinforow[,"surName"])
creator <- new("creator",
individualName = individualName,
organizationName = personinforow[,"organizationName"],
electronicMailAddress = personinforow[,"electronicMailAddress"])
if(nchar(personinforow[,"userId"]) > 0){
userId <- new("userId")
userId@directory <- new("xml_attribute", "http://orcid.org")
userId@.Data <- personinforow[,"userId"]
print(creator)
creator@userId <- new("ListOfuserId", c(userId))
}
}
personinfo <- read.csv("creators.csv", header = TRUE, sep = ",", colClasses = "character")
dataset@creator <- as(lapply(1:dim(personinfo)[1], function(i)
set_creator(personinfo[i,])),
"ListOfcreator")
title <- "LAGOS - Lake  nitrogen, phosphorus, and stoichiometry data and geospatial data for lakes in a 17-state region of the U.S."
pubDate <- "2016"
abstract <- as(set_TextType("abstract.docx"), "abstract")
dataset <- new("dataset",
title = title,
pubDate = pubDate,
abstract = abstract)
set_creator <- function(personinforow){
individualName <- new("individualName",
givenName = personinforow[,"givenName"],
surName = personinforow[,"surName"])
creator <- new("creator",
individualName = individualName,
organizationName = personinforow[,"organizationName"],
electronicMailAddress = personinforow[,"electronicMailAddress"])
if(nchar(personinforow[,"userId"]) > 0){
userId <- new("userId")
userId@directory <- new("xml_attribute", "http://orcid.org")
userId@.Data <- personinforow[,"userId"]
creator@userId <- new("ListOfuserId", c(userId))
print(creator)
}
}
personinfo <- read.csv("creators.csv", header = TRUE, sep = ",", colClasses = "character")
dataset@creator <- as(lapply(1:dim(personinfo)[1], function(i)
set_creator(personinfo[i,])),
"ListOfcreator")
dataset
title <- "LAGOS - Lake  nitrogen, phosphorus, and stoichiometry data and geospatial data for lakes in a 17-state region of the U.S."
pubDate <- "2016"
abstract <- as(set_TextType("abstract.docx"), "abstract")
dataset <- new("dataset",
title = title,
pubDate = pubDate,
abstract = abstract)
print(dataset)
set_creator <- function(personinforow){
individualName <- new("individualName",
givenName = personinforow[,"givenName"],
surName = personinforow[,"surName"])
creator <- new("creator",
individualName = individualName,
organizationName = personinforow[,"organizationName"],
electronicMailAddress = personinforow[,"electronicMailAddress"])
if(nchar(personinforow[,"userId"]) > 0){
userId <- new("userId")
userId@directory <- new("xml_attribute", "http://orcid.org")
userId@.Data <- personinforow[,"userId"]
creator@userId <- new("ListOfuserId", c(userId))
}
print(creator)
}
personinfo <- read.csv("creators.csv", header = TRUE, sep = ",", colClasses = "character")
dataset@creator <- as(lapply(1:dim(personinfo)[1], function(i)
set_creator(personinfo[i,])),
"ListOfcreator")
dim(personinfo)[1]
dim(personinfo)[2]
personinfo[1]
personinfo[2]
personinfo[1,]
title <- "LAGOS - Lake  nitrogen, phosphorus, and stoichiometry data and geospatial data for lakes in a 17-state region of the U.S."
pubDate <- "2016"
abstract <- as(set_TextType("abstract.docx"), "abstract")
dataset <- new("dataset",
title = title,
pubDate = pubDate,
abstract = abstract)
print(dataset)
set_creator <- function(personinforow){
individualName <- new("individualName",
givenName = personinforow[,"givenName"],
surName = personinforow[,"surName"])
creator <- new("creator",
individualName = individualName,
organizationName = personinforow[,"organizationName"],
electronicMailAddress = personinforow[,"electronicMailAddress"])
if(nchar(personinforow[,"userId"]) > 0){
userId <- new("userId")
userId@directory <- new("xml_attribute", "http://orcid.org")
userId@.Data <- personinforow[,"userId"]
creator@userId <- new("ListOfuserId", c(userId))
}
print(dataset)
}
personinfo <- read.csv("creators.csv", header = TRUE, sep = ",", colClasses = "character")
dataset@creator <- as(lapply(1:dim(personinfo)[1], function(i)
set_creator(personinfo[i,])),
"ListOfcreator")
title <- "LAGOS - Lake  nitrogen, phosphorus, and stoichiometry data and geospatial data for lakes in a 17-state region of the U.S."
pubDate <- "2016"
abstract <- as(set_TextType("abstract.docx"), "abstract")
dataset <- new("dataset",
title = title,
pubDate = pubDate,
abstract = abstract)
print(dataset)
set_creator <- function(personinforow){
individualName <- new("individualName",
givenName = personinforow[,"givenName"],
surName = personinforow[,"surName"])
creator <- new("creator",
individualName = individualName,
organizationName = personinforow[,"organizationName"],
electronicMailAddress = personinforow[,"electronicMailAddress"])
if(nchar(personinforow[,"userId"]) > 0){
userId <- new("userId")
userId@directory <- new("xml_attribute", "http://orcid.org")
userId@.Data <- personinforow[,"userId"]
creator@userId <- new("ListOfuserId", c(userId))
}
print(personinforow)
}
personinfo <- read.csv("creators.csv", header = TRUE, sep = ",", colClasses = "character")
dataset@creator <- as(lapply(1:dim(personinfo)[1], function(i)
set_creator(personinfo[i,])),
"ListOfcreator")
lapply(1:dim(personinfo)[1], function(i)
set_creator(personinfo[i,]))
dataset
creators <- lapply(1:dim(personinfo)[1], function(i)
set_creator(personinfo[i,]))
creators
creators <- as(lapply(1:dim(personinfo)[1], function(i)
set_creator(personinfo[i,])), "ListOfcreator")
creators
title <- "LAGOS - Lake  nitrogen, phosphorus, and stoichiometry data and geospatial data for lakes in a 17-state region of the U.S."
pubDate <- "2016"
abstract <- as(set_TextType("abstract.docx"), "abstract")
dataset <- new("dataset",
title = title,
pubDate = pubDate,
abstract = abstract)
print(dataset)
set_creator <- function(personinforow){
individualName <- new("individualName",
givenName = personinforow[,"givenName"],
surName = personinforow[,"surName"])
creator <- new("creator",
individualName = individualName,
organizationName = personinforow[,"organizationName"],
electronicMailAddress = personinforow[,"electronicMailAddress"])
if(nchar(personinforow[,"userId"]) > 0){
userId <- new("userId")
userId@directory <- new("xml_attribute", "http://orcid.org")
userId@.Data <- personinforow[,"userId"]
creator@userId <- new("ListOfuserId", c(userId))
}
creator
}
personinfo <- read.csv("creators.csv", header = TRUE, sep = ",", colClasses = "character")
creators <- as(lapply(1:dim(personinfo)[1], function(i)
set_creator(personinfo[i,])), "ListOfcreator")
creators
dataset@creator <- as(lapply(1:dim(personinfo)[1], function(i)
set_creator(personinfo[i,])),
"ListOfcreator")
dataset
getSlots("dataset")
dataset_contact <- as.peron("Patricia Soranno <, soranno@msu.edu>")
NTL_address <- new("address",
deliveryPoint = "Center for Limnology 680 North Park Str.",
city = "Madison",
administrativeArea = "WI",
postalCode = "53706",
country = "USA")
NTL_contact <- new("contact",
new("individualName",
givenName = "NTL",
surName = "Information-Manager"),
electronicMail = "infomgr@lter.limnology.wisc.edu",
address = NTL_address,
organizationName = "North Temperate Lakes LTER",
phone = "608-890-3446")
dataset@contact <- new("ListOfcontact", c(datset_contact, NTL_contact))
dataset_contact <- as.person("Patricia Soranno <, soranno@msu.edu>")
dataset@contact <- new("ListOfcontact", c(dataset_contact, NTL_contact))
dataset_contact
dataset_contact <- as.person("Patricia Soranno <soranno@msu.edu>")
dataset_contact
dc <- as.person("Patricia Soranno <soranno@msu.edu>")
dataset_contact <- as(dc, "contact")
dataset_contact
dataset@contact <- new("ListOfcontact", c(dataset_contact, NTL_contact))
dataset
keywordSet <- c(new("keywordSet",
keyword = c("Limnology"," water quality"," lakes"," watersheds"," freshwater"," land use"," land cover"," bathymetry"," atmospheric properties"," climate"," geographic information systems")))
dataset@keywordSet <- new("ListOfkeywordset", c(keywordSet))
getSlots("dataset")
dataset@keywordSet <- new("ListOfkeywordSet", c(keywordSet))
methods <- set_methods("methods.docx")
dataset@methods <- new("ListOfmethods", c(methods))
dataset@methods <- methods
begindate <- "2015-03-01"
enddate <- "2016-11-31"
geographicDescription <- "A 17-state region of the upper midwest to northeast United States. States included in the database are Minnesota, Iowa, Missouri, Wisconsin, Michigan, Illinois, Indiana, Ohio, Pennsylvania, New York, New Jersey, Connecticut, Massachusetts, Rhode Island, Vermont, New Hampshire, and Maine."
coverage <- set_coverage(begin = begindate, end = enddate,
geographicDescription = geographicDescription,
west = -67.152, east = -96.330,
north = 48.165, south = 36.491)
dataset@coverage <- coverage
dataset
df <- read.csv("LAGOS_stoichiometry_forarchive.csv", header=TRUE, sep=",", quote("\""))
rows <- ncol(df)
attributes <- data.frame(attributeName = character(rows),
formatString = character(rows),
unit = character(rows),
numberType = character(rows),
definition = character(rows),
attributeDefinition = character(rows),
columnClasses = character(rows),
minimum = character(rows),
maximum = character(rows),
stringsAsFactors = FALSE)
#get some metadata from data frame
#add the column names to the template file
attributes$attributeName <- names(df)
#get the data types for each column
attributes$columnClasses <- sapply(df, class)
#set what R thinks is integer to numeric
attributes$columnClasses[attributes$columnClasses == "integer"] <- "numeric"
#write the prepared template to a csv file
write.csv(attributes, file = "collinsSarahmetadata.csv", row.names = FALSE)
df <- read.csv("LAGOS_stoichiometry_forarchive.csv", header=TRUE, sep=",", quote="\"", as.is)
df <- read.csv("LAGOS_stoichiometry_forarchive.csv", header=TRUE, sep=",", quote="\"", as.is=TRUE)
attributes$minimum <- sapply(df, min)
attributes$maximum <- sapply(df, max)
write.csv(attributes, file = "collinsSarahmetadata2.csv", row.names = FALSE)
standardUnits <- get_unitList()
View(standardUnits$units)
attributes <- read.csv("collinsSarahmetadata.csv", header = TRUE, sep = ",", quote = "\"", as.is = TRUE)
attributes <- read.csv("collinsSarahmetadata.csv", header = TRUE, sep = ",", quote = "\"", as.is = TRUE)
col_classes <- attributes[,"columnClasses"]
attributes$columnClasses <- NULL
attributeList <- set_attributes(attributes, col_classes)
attributes <- read.csv("collinsSarahmetadata.csv", header = TRUE, sep = ",", quote = "\"", as.is = TRUE)
col_classes <- attributes[,"columnClasses"]
attributes$columnClasses <- NULL
attributeList <- set_attributes(attributes, col_classes)
attributeList <- set_attributes(attributes, col_classes = col_classes)
attributes <- read.csv("collinsSarahmetadata.csv", header = TRUE, sep = ",", quote = "\"", as.is = TRUE)
col_classes <- attributes[,"columnClasses"]
col_classes
attributes$columnClasses <- NULL
attributeList <- set_attributes(attributes, col_classes = col_classes)
attributeList
attributes
attributeList <- set_attributes(attributes, col_classes = col_classes)
attributeList <- set_attributes(attributes, factor = NULL, col_classes = col_classes)
attributeList <- set_attributes(attributes, factors = NULL, col_classes = col_classes)
attributes <- read.csv("collinsSarahmetadata.csv", header = TRUE, sep = ",", quote = "\"", as.is = TRUE)
col_classes <- attributes[,"columnClasses"]
attributes$columnClasses <- NULL
attributeList <- set_attributes(attributes, col_classes = col_classes)
physical <- set_physical("LAGOS_stoichiometry_forarchive.csv")
dataTable <- new("dataTable",
entityName = "Sparkling2014wtemp.csv",
entityDescription = "minute water temperature data in Lake Mendota",
physical = physical,
attributeList = attributeList)
getSlots("dataset")
dataset@dataTable <- new("ListOfdataTable", c(dataTable))
eml <- new("eml",
packageId = "knb-lter-ntl.332.1",
system = "knb",
dataset = dataset)
eml_validate(eml)
enddate <- "2016-11-30"
coverage <- set_coverage(begin = begindate, end = enddate,
geographicDescription = geographicDescription,
west = -67.152, east = -96.330,
north = 48.165, south = 36.491)
dataset@coverage <- coverage
eml_validate(eml)
coverage
dataset
eml <- new("eml",
packageId = "knb-lter-ntl.332.1",
system = "knb",
dataset = dataset)
eml_validate(eml)
write_eml(eml, "332.xml")
physical@distribution <- new("online",
url = "https://lter6.limnology.wisc.edu/sites/default/files/data/LAGOS_stoichiometry_forarchive.csv")
online <- new("online",
url = "https://lter6.limnology.wisc.edu/sites/default/files/data/LAGOS_stoichiometry_forarchive.csv")
getSlots("physical")
physical@distribution <- new("distribution",
online = online)
distribution <- new("distribution",
online = new("online",
url = "https://lter6.limnology.wisc.edu/sites/default/files/data/LAGOS_stoichiometry_forarchive.csv"))
physical@distribution <- new("ListOfdistribution", c(distribution))
#pull to gether information for the dataTable
dataTable <- new("dataTable",
entityName = "LAGOS_stoichiometry_forarchive.csv",
entityDescription = "This dataset includes information about total nitrogen (TN) concentrations, total phosphorus (TP) concentrations, TN:TP stoichiometry, and 12 driver variables that might predict nutrient concentrations and ratios.",
physical = physical,
attributeList = attributeList)
dataset@dataTable <- new("ListOfdataTable", c(dataTable))
eml <- new("eml",
packageId = "knb-lter-ntl.332.1",
system = "knb",
dataset = dataset)
eml_validate(eml)
distribution <- new("distribution",
online = new("online",
url = "https://lter6.limnology.wisc.edu/sites/default/files/data/LAGOS_stoichiometry_forarchive_0.csv"))
physical@distribution <- new("ListOfdistribution", c(distribution))
#pull to gether information for the dataTable
dataTable <- new("dataTable",
entityName = "LAGOS_stoichiometry_forarchive.csv",
entityDescription = "This dataset includes information about total nitrogen (TN) concentrations, total phosphorus (TP) concentrations, TN:TP stoichiometry, and 12 driver variables that might predict nutrient concentrations and ratios.",
physical = physical,
attributeList = attributeList)
dataset@dataTable <- new("ListOfdataTable", c(dataTable))
eml <- new("eml",
packageId = "knb-lter-ntl.332.1",
system = "knb",
dataset = dataset)
eml_validate(eml)
project <- new("project",
title = "NSF Postdoctoral Fellowship in Biology FY 2014",
funding = new("para", "National Science Foundation DBI-1401954"))
project <- new("project",
title = "NSF Postdoctoral Fellowship in Biology FY 2014",
funding = "National Science Foundation DBI-1401954")
project
pp <- as.person("Sarah Collins <sarahmcollins@gmail.com>")
pp <- as.person("Sarah Collins <sarahmcollins@gmail.com>")
project@personnel <- as(pp, "personnel")
personnel <- as(pp, "personnel")
project@personnel <- new("ListOfpersonnel", c(personnel))
relatedProject <- new("relatedProject",
title = "Collaborative Research: The Effects of Cross-Scale Interactions on Freshwater Ecosystem State Across Space and Time",
personnel = as(dc, "personnel"),
funding = "National Science Foundation EF-1065786 and EF-1065818")
project@relatedProject <- new("ListOfrelatedProject", c(relatedProject))
project
dataset@project <- project
eml <- new("eml",
packageId = "knb-lter-ntl.332.1",
system = "knb",
dataset = dataset)
eml_validate(eml)
personnel@role <- new("ListOfrole", c("Principal Investigator"))
getSlots("personnel")
role <- new("role", "Principal Investigator")
personnel@role <- new("ListOfrole", c(role))
project@personnel <- new("ListOfpersonnel", c(personnel))
relatedProject@personnel@role <- new("ListOfrole", c(role))
